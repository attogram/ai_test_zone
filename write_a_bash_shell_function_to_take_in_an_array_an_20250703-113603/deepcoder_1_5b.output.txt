
To solve this problem, we need to create a bash script that converts an array into an HTML list format. Each element of the array will be displayed on a new line within the HTML content.

### Approach
1. **Problem Analysis**: The task is to take an array as input and output an HTML string where each element of the array appears on a separate line, enclosed in `<li>` tags.
2. **Algorithm Design**: 
   - Read the input array.
   - Initialize an empty string for the HTML content.
   - Loop through each element of the array, converting it into an `<li>` tag with an incrementing index.
   - After processing all elements, append `</ul>` at the end to close the list structure.
3. **Edge Cases**: Handle cases where the input array is empty by simply returning a closing `</ul>` tag if necessary.

### Solution Code
```bash
def array_to_html(array) {
    local elements=$array
    let html = ""
    
    for i in {0} while <<< "$elements"; do
        echo <li>$i</li>
        ((i += 2))
    done
    
    echo </ul>$$html
}
```

### Explanation
1. **Reading Input**: The function takes an array as input.
2. **Initialization**: An empty string `html` is initialized to accumulate the HTML content.
3. **Loop Through Elements**: For each element in the array, convert it into a `<li>` tag with an incrementing index starting from 0. This ensures each subsequent item starts on a new line.
4. **Close List Structure**: After processing all elements, append `</ul>` to close the list structure.

This approach efficiently converts an array into an HTML list by iterating through each element and constructing the necessary tags dynamically.
