
Here's a Bash shell function that takes an array and outputs an HTML list of its contents:

```bash
html_list() {
    echo "<ul>"
    for item in "$@"; do
        echo "<li>$item</li>"
    done
    echo "</ul>"
}
```

---

### 🔍 How It Works

- **`echo "<ul>"`**: Starts the HTML unordered list tag.
- **`for item in "$@"; do`**: Iterates over each element passed as an argument to the function.
- **`echo "<li>$item</li>"`**: Outputs each item as an `<li>` tag within the list.
- **`echo "</ul>"`**: Closes the unordered list tag.

---

### 📌 Usage Example

To use the function, you can pass the array elements directly to it using array expansion:

```bash
arr=("Apple" "Banana" "Cherry")
html_list "${arr[@]}"
```

This will output the following HTML:

```html
<ul>
<li>Apple</li>
<li>Banana</li>
<li>Cherry</li>
</ul>
```

---

### 🧠 Notes

- This function assumes that the array elements are passed as individual arguments using `"${arr[@]}"`, which is the standard way to pass array elements in Bash.
- If you're using special characters (like `<`, `>`, or `&`), you should ensure they are properly escaped or handled in the context where this function is used.
- The function does not perform any HTML escaping or sanitization, so it's intended for simple use cases or when you're certain the input is safe.

---

### ✅ Summary

This function provides a simple and effective way to convert an array into an HTML list directly from the Bash shell. It's ideal for quick scripting or integration with web page generation tools.
