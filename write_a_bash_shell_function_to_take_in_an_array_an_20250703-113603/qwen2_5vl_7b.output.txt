Certainly! Below is a Bash shell function that takes an array as input and outputs an HTML list of its contents.

```bash
#!/bin/bash

# Function to generate an HTML list from an array
generate_html_list() {
    local -a array=("$@")  # Convert all arguments into an array
    local html_list=""

    # Loop through the array and build the HTML list
    for item in "${array[@]}"; do
        html_list+="<li>$item</li>\n"
    done

    # Output the HTML list
    echo "<ul>$html_list</ul>"
}

# Example usage:
# array=(apple banana cherry)
# generate_html_list "${array[@]}"
# This will output:
# <ul>
#     <li>apple</li>
#     <li>banana</li>
#     <li>cherry</li>
# </ul>
```

### How to Use the Function:
1. Save the function in a script file, for example, `generate_html_list.sh`.
2. Make the script executable:
   ```bash
   chmod +x generate_html_list.sh
   ```
3. Call the function with an array of items:
   ```bash
   array=(apple banana cherry)
   generate_html_list "${array[@]}"
   ```

### Example Output:
```html
<ul>
    <li>apple</li>
    <li>banana</li>
    <li>cherry</li>
</ul>
```

This function will take any number of arguments and convert them into an HTML list. You can call it with any array of items, and it will generate the corresponding HTML list.

