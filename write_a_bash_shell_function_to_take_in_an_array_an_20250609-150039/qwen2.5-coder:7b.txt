Certainly! Below is a Bash shell function that takes an array as input and outputs an HTML list (`<ul>` with `<li>` items) of the array's contents.

```bash
#!/bin/bash

# Function to convert an array to HTML list
array_to_html_list() {
    # Check if no arguments are provided
    if [ $# -eq 0 ]; then
        echo "No arguments provided."
        return 1
    fi

    # Initialize the HTML list
    local html_list="<ul>"

    # Loop through each element in the array and add it to the list
    for item in "$@"; do
        html_list+="  <li>$item</li>"
    done

    # Close the list tag
    html_list+="</ul>"

    # Output the HTML list
    echo "$html_list"
}

# Example usage:
my_array=("Item 1" "Item 2" "Item 3")
array_to_html_list "${my_array[@]}"
```

### Explanation:
1. **Function Definition**: The function `array_to_html_list` is defined.
2. **Argument Check**: It checks if any arguments are provided. If not, it prints an error message and returns with a status code of 1.
3. **HTML Initialization**: It initializes the HTML list string with `<ul>`.
4. **Loop Through Array**: It iterates over each element in the array and appends an `<li>` element for each item to the `html_list` string.
5. **Close List Tag**: Finally, it closes the `<ul>` tag and outputs the complete HTML list.

### Example Usage:
The example usage demonstrates how to call the function with an array of items and print the resulting HTML list.

You can save this function in a Bash script file or include it directly in your shell session. To use it, simply call `array_to_html_list` with an array of strings as arguments.

