Here is the refactored function:

```bash
function addModelToIndexFile {
    responseWords=$(wc -w < "$modelFile" | awk '{print $1}')
    responseBytes=$(wc -c < "$modelFile" | awk '{print $1}')

    (
        echo "<tr><td class='left'><a href='./$model.html'>$model</a></td><td >$responseWords</td><td>${responseBytes}</td>"
        while read -r line; do
          value=$(echo "$line" | cut -d ':' -f2)
          if [[ -n "$value" ]]; then
            echo "<td>${value}</td>";
          fi
        done < "$statsFile"
        echo "</tr>"
    ) >> "$indexFile"
}
```

In this refactored version, we have removed the `statsInfo` array. Instead of parsing the `$statsFile` into an array first, we directly read and process each line in a loop. If a value is not empty, it will be output to the index file.

The function still takes the same parameters and produces the same output as before but avoids the unnecessary step of creating and populating the `statsInfo` array.

