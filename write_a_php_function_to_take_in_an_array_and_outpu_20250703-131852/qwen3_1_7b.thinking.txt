Okay, I need to write a PHP function that takes an array and outputs an HTML list of its contents. Let's see. So the function should probably accept an array as an argument. Then, convert that array into an HTML unordered list.

First, I remember that in PHP, to create an HTML list, you can use the <ul> tag. Each list item is <li>. So, for each element in the array, I need to create a <li> tag.

But how to loop through the array in PHP? Well, I can use a foreach loop. So the function would start by checking if the input is an array. Wait, maybe the function should handle cases where the input is not an array? Or maybe it's assumed that the input is an array. The problem says "take in an array", so maybe the function is supposed to handle arrays only.

So the function would be something like:

function createHtmlList($array) {
    // check if $array is an array
    if (!is_array($array)) {
        return "Invalid input: must be an array";
    }
    // loop through each element
    echo '<ul>';
    foreach ($array as $item) {
        echo '<li>' . $item . '</li>';
    }
    echo '</ul>';
}

Wait, but maybe the user wants to return the HTML string or echo it? The question says "output a html list of the array contents". So perhaps the function should output the HTML, which would mean using echo. But maybe the function should return the HTML string. The problem isn't clear. But since the user says "output", maybe they want to echo it. However, in PHP, if you use echo, it will output to the browser. But if the function is supposed to return the HTML, then it should return a string.

But the problem doesn't specify. Hmm. Well, the example might expect that the function outputs the HTML, so using echo. But maybe the function should return the HTML. Let me think. For example, if someone calls the function and wants to use the HTML somewhere else, like in a template, then returning the string would be better. But the question says "output a html list", which implies that the function should generate the HTML and output it. So using echo.

But perhaps the function should return the HTML. Let me check. For example, if the function is called and the HTML is needed elsewhere, returning it would be better. But the question isn't clear. However, since the user hasn't specified, maybe the safest way is to return the HTML as a string. But the problem says "output", which might mean that the function should output it, so using echo.

Wait, but in PHP, if you use echo, it will output to the browser. If the function is part of a larger code, maybe the user wants to return the HTML. But the question is a bit ambiguous. However, the most straightforward approach is to use echo, so that the function outputs the HTML.

So the function would be:

function createHtmlList($array) {
    if (!is_array($array)) {
        return "Invalid input: must be an array";
    }
    echo '<ul>';
    foreach ($array as $item) {
        echo '<li>' . $item . '</li>';
    }
    echo '</ul>';
}

But maybe the user wants to return the HTML instead of echoing. For example, if the function is called and the HTML is needed to be stored or used elsewhere. But the question says "output", which suggests that the function should generate the HTML and display it. So using echo is correct.

Another thing to consider: what if the array has elements that are not strings? Like arrays with numbers or objects. But the problem says "array", so perhaps the function is supposed to handle any type of elements. The code would just output them as is, which is acceptable.

Testing with an example: if the array is ['apple', 'banana', 'cherry'], the output would be <ul><li>apple</li><li>banana</li><li>cherry</li></ul>.

So the function seems correct. But maybe the user wants to handle cases where the array is empty? Well, the code would output an empty ul, which is correct.

So I think that's the solution.
