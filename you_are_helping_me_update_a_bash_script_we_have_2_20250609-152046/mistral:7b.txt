 To achieve this, you can use `awk` and bash built-in tools to parse the text files. Here's a modified version of your script:

```bash
#!/bin/bash

# Read stats.txt file line by line and store the data in an associative array
declare -A stats
while IFS=':' read -r name value; do
  stats[$name]=$value
done < stats.txt

# Read show.txt file section by section using awk and bash built-in tools
readarray -t model_data <<< "$(awk '/^Model$/ {getline; print;} /^$/{next};1' show.txt)"
readarray -t capabilities <<< "$(awk '/^Capabilities$/ {getline; while(getline <&FD){print}} /^Parameters$/' show.txt | sed ':a;N;$!ba;s/\n//g')"
readarray -t parameters_data <<< "$(awk '/^Parameters$/ {getline; print;} /^$/{next};1' show.txt)"

# Create an associative array for the show data
declare -A show
for ((i = 0; i < ${#model_data[@]}; i+=2)); do
  show["${model_data[$i]}"]="${model_data[$((i + 1))]}"
done

# For Capabilities and Parameters, create an array with unique elements
capabilities=($(echo "${capabilities[@]}" | tr ' ' '\n' | sort -u))
parameter_names=(${parameters_data[@]})

# Print the parsed data for stats.txt and show.txt files
echo "Stats:"
for name in ${!stats[@]}; do
  echo "${name}: ${stats[$name]}"
done

echo ""
echo "Show:"
echo "Model:"
for name in "${!show[@]}"; do
  echo "${name}: ${show[$name]}"
done
echo "Capabilities: ${capabilities[@]}"
echo "Parameters:"
for name in "${parameter_names[@]}"
do
  echo "${name}: ${parameters_data[${(Parameter indices -- "$name")]}"
done
```

In this script, we are using `awk` to read the show.txt file section by section and storing the data into different arrays. The associative arrays for stats and show are created using loops that iterate through the lines of the files. We are also filtering duplicates in the Capabilities and Parameters sections. Finally, we print out the parsed data from both files at the end.

