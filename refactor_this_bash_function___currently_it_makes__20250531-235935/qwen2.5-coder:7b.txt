Certainly! Here's the refactored version of your bash function. Instead of reading the `$statsInfo` array and then iterating over it, the script directly reads from `$statsFile` and outputs the values into the `$indexFile`.

```bash
function addModelToIndexFile {
    responseWords=$(wc -w < "$modelFile" | awk '{print $1}')
    responseBytes=$(wc -c < "$modelFile" | awk '{print $1}')

    (
        echo "<tr><td class='left'><a href='./$model.html'>$model</a></td><td>$responseWords</td><td>${responseBytes}</td>"
        while read -r line; do
          value=$(echo "$line" | cut -d ':' -f2)
          if [[ -n "$value" ]]; then
            echo "<td>${value}</td>";
          fi
        done < "$statsFile"
        echo "</tr>"
    ) >> "$indexFile"
}
```

### Explanation of Changes:
1. **Removed the `$statsInfo` array**: The function now directly reads from `$statsFile` and processes each line to extract values.
2. **Directly process each line from `$statsFile`**: Inside the loop, it reads each line, extracts the value after the `:` character, and outputs it directly into the `$indexFile`.

This refactoring ensures that the function is more streamlined and avoids unnecessary array usage.

