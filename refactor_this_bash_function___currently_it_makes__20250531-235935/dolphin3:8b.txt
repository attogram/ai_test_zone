Refactored code:

```bash
function addModelToIndexFile {
    responseWords=$(wc -w < "$modelFile" | awk '{print $1}')
    responseBytes=$(wc -c < "$modelFile" | awk '{print $1}')

    (
        echo "<tr><td class='left'><a href='./$model.html'>$model</a></td><td >$responseWords</td><td>${responseBytes}</td>"
        while read -r line; do
            value=$(echo "$line" | cut -d ':' -f2)
            if [[ -n "$value" ]]; then
                echo "<td>${value}</td>";
            fi
        done < "$statsFile"
        echo "</tr>"
    ) >> "$indexFile"
}
```
In this refactored version, we removed the `statsInfo` array and its associated logic. Instead of storing each value in an array and then looping through it later, we added a `while` loop directly inside the `awk` script that writes to the index file. This way, we process each line from `$statsFile` immediately after reading it and outputting the relevant information into the index file.

