 Here is the refactored version of your function, which reads `$statsFile` directly and outputs values to the index file without using an intermediate array:

```bash
function addModelToIndexFile {
    responseWords=$(wc -w < "$modelFile")
    responseBytes=$(wc -c < "$modelFile")

    # read stats file line by line and output each value to the index file directly
    IFS=':' read key value _ < "$statsFile"
    while [ -n "$value" ]; do
        if [[ $key == "model" ]]; then
            model="$value"
        else
            (echo "<td>${value}</td>" >> "$indexFile")
        fi
        IFS=':' read key value _ < "$statsFile"
    done

    (
        echo "<tr><td class='left'><a href='./$model.html'>$model</a></td><td >$responseWords</td><td>${responseBytes}</td>"
    ) >> "$indexFile"
}
```

This refactored function keeps the same behavior as the original, but instead of storing values in an intermediate array (`statsInfo`), it reads and outputs the values directly from `$statsFile`. The IFS variable is set to ':' for reading the file line by line, and the loop continues until there are no more lines in the file.

