
To create a Python function that converts an array into an HTML unordered list, we can follow a simple and straightforward approach. The function will:

- Accept an array (list) as input.
- Generate an HTML `<ul>` (unordered list) tag.
- Iterate over each element in the array and create a `<li>` (list item) tag for each element.
- Close the HTML list with a `</ul>` tag.

This function assumes that the input array contains elements that can be directly converted into text for the list items. It handles empty arrays by returning an empty string, which is appropriate.

---

### ✅ Example Usage

```python
array_to_html_list(["apple", "banana", "cherry"])
```

### ✅ Output

```html
<ul>
<li>apple</li>
<li>banana</li>
<li>cherry</li>
</ul>
```

---

### 📌 Function Implementation

```python
def array_to_html_list(arr):
    html = "<ul>\n"
    for item in arr:
        html += f"<li>{item}</li>\n"
    html += "</ul>"
    return html
```

---

### 🧪 Edge Cases

- **Empty Array**: Returns an empty string.
- **Non-String Elements**: Will generate `<li>` tags with the actual values, regardless of their type (e.g., numbers, booleans, etc.).

---

### 📝 Notes

- The function does **not** handle the case where the array contains nested structures or complex objects. It assumes that the elements are simple and can be directly rendered as text.
- The output is a well-formed HTML string that can be directly used in web pages or rendered in HTML browsers.

This implementation is clean, efficient, and adheres to the requirements of the problem.
