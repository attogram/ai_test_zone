<think>
Okay, I need to write a PHP function that takes an array and outputs an HTML list of its contents. Let's think about how to approach this.

First, the function needs to accept an array as input. So the function will probably have a parameter like $array. Then, I need to generate an HTML list. The most common way is to use the <ul> and <li> tags.

Wait, but how do I loop through the array? Well, in PHP, I can use a foreach loop. So I'll loop through each element of the array and create list items.

So the function could look something like this:

function createHtmlList($array) {
    $html = '<ul>';
    foreach ($array as $item) {
        $html .= '<li>' . $item . '</li>';
    }
    $html .= '</ul>';
    return $html;
}

But wait, what if the array is empty? Well, the function would return an empty ul, which is okay. But maybe I should check if the array is not empty? But the user didn't specify any constraints, so perhaps it's better to just assume the array is valid.

Another thing: if the array has elements that are not strings, like arrays or objects, but the user probably wants to output them as list items. So the function would just output the elements as is, which is fine.

So the function is straightforward. Let me test this in my mind. If the input is an array like [1,2,3], the output would be <ul><li>1</li><li>2</li><li>3</li></ul>.

Yes, that seems right. So the code should be as written. But maybe I should add some error handling? Like if the input is not an array? But the problem statement doesn't mention that, so maybe not necessary.

So the final function is as above. Let me write that in PHP.
</think>

Certainly! Below is a PHP function that takes an array as input and returns a well-formed HTML list (using `<ul>` and `<li>` tags) of its contents.

---

### ✅ Function Overview

- **Input**: An array of elements (could be strings, numbers, objects, etc.).
- **Output**: A string containing an HTML `<ul>` list with each array element as a `<li>`.
- **Assumptions**:
  - The input is a valid array.
  - The array elements are to be rendered as text in the list.

---

### 🧪 Example Usage

```php
$items = ["apple", "banana", "cherry"];
$htmlList = createHtmlList($items);
echo $htmlList;
```

---

### 📦 PHP Function Code

```php
function createHtmlList($array) {
    $html = '<ul>';
    foreach ($array as $item) {
        $html .= '<li>' . htmlspecialchars($item) . '</li>';
    }
    $html .= '</ul>';
    return $html;
}
```

---

### 🔍 Notes

- The `htmlspecialchars()` function is used to prevent XSS attacks and ensure safe output.
- The function assumes the input is a valid array and does not include error handling for invalid inputs.
- The list is rendered in standard HTML format with `<ul>` and `<li>` tags.

---

### 📝 Output Example

If the input is:

```php
$items = ["apple", "banana", "cherry"];
```

The output will be:

```html
<ul>
  <li>apple</li>
  <li>banana</li>
  <li>cherry</li>
</ul>
```

This is a clean, safe, and readable way to generate an HTML list from an array in PHP.

