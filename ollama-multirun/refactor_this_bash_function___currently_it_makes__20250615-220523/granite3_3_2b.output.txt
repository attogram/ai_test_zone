Here's the refactored bash function that directly reads from $statsFile and outputs the values into the index file without using an intermediate array:

```bash
function addModelToIndexFile {
    # Read stats file line by line
    while read -r line; do
        # Extract the value using cut command, splitting on : character, getting the second part of each line
        value=$(echo "$line" | cut -d ':' -f2)

        # Write header row
        echo "<tr><td class='left'><a href='./$model.html'>$model</a></td><td>${responseWords}</td><td>${responseBytes}</td>"

        # Add stats values directly to the output file
        if [[ -n "$value" ]]; then
            echo "<td>${value}</td>";
        fi
    done < "$statsFile"

    # Write footer row
    echo "</tr>" >> "$indexFile"
}
```

This refactored function reads $statsFile line by line, extracts the required value using `cut`, and writes it directly into the index file. It avoids using an intermediate array (`statsInfo`) and reduces redundancy. The header and footer rows are also handled separately for clarity.

