Certainly! Below is a JavaScript function that takes an array as input and returns an HTML list (`<ul><li>` elements) of the array's contents.

```javascript
function arrayToHtmlList(array) {
    // Create an unordered list element
    const ul = document.createElement('ul');

    // Loop through the array and create list items
    array.forEach(item => {
        // Create a list item element
        const li = document.createElement('li');
        // Set the text content of the list item to the array item
        li.textContent = item;
        // Append the list item to the unordered list
        ul.appendChild(li);
    });

    // Return the unordered list element as a string
    return ul.outerHTML;
}

// Example usage:
const myArray = ['Apple', 'Banana', 'Cherry'];
const htmlList = arrayToHtmlList(myArray);
console.log(htmlList);
```

### Explanation:
1. **Create an unordered list (`<ul>`) element**: This will be the container for the list items.
2. **Loop through the array using `forEach`**: For each item in the array, create a list item (`<li>`) element.
3. **Set the text content of the list item**: This is done using `textContent`.
4. **Append the list item to the unordered list**: This is done using `appendChild`.
5. **Return the unordered list element as a string**: This is done using `outerHTML`, which returns the HTML representation of the element.

### Example Output:
If you run the example with `myArray = ['Apple', 'Banana', 'Cherry']`, the output will be:

```html
<ul>
    <li>Apple</li>
    <li>Banana</li>
    <li>Cherry</li>
</ul>
```

You can then use this HTML string in your web page or manipulate it as needed.

