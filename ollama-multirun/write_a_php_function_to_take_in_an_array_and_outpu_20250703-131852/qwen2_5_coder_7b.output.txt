Certainly! Below is a simple PHP function that takes an array as input and outputs an HTML unordered list (`<ul>`) containing the elements of the array.

```php
<?php

function arrayToHtmlList($array) {
    if (!is_array($array) || empty($array)) {
        return '<p>No items to display.</p>';
    }

    $html = '<ul>';
    
    foreach ($array as $item) {
        $html .= '<li>' . htmlspecialchars($item, ENT_QUOTES, 'UTF-8') . '</li>';
    }
    
    $html .= '</ul>';

    return $html;
}

// Example usage:
$array = ['Apple', 'Banana', 'Cherry'];
echo arrayToHtmlList($array);
?>
```

### Explanation:

1. **Input Validation**: The function first checks if the input is an array and if it's not empty. If either condition is false, it returns a message indicating that there are no items to display.

2. **HTML Structure**: It starts by creating the opening `<ul>` tag.

3. **Loop Through Array**: It uses a `foreach` loop to iterate through each element of the array. Inside the loop:
   - The `htmlspecialchars()` function is used to escape any special characters in the array items to prevent XSS attacks.
   - Each item is wrapped in an `<li>` tag and added to the `$html` string.

4. **Closing Tag**: After the loop, it appends the closing `</ul>` tag to complete the HTML structure.

5. **Return HTML**: Finally, the function returns the generated HTML string containing the unordered list.

### Example Usage:
In the example usage, the array `['Apple', 'Banana', 'Cherry']` is passed to the `arrayToHtmlList()` function, and it will output:

```html
<ul>
    <li>Apple</li>
    <li>Banana</li>
    <li>Cherry</li>
</ul>
```

This can then be directly echoed or inserted into your HTML page.

