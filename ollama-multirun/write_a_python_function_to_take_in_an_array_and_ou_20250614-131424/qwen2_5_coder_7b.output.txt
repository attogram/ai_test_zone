Certainly! Below is a Python function that takes an array (or list) as input and returns an HTML unordered list (`<ul>`) containing the items from the array.

```python
def array_to_html_list(array):
    # Start with the opening <ul> tag
    html_list = "<ul>\n"
    
    # Iterate through each item in the array and add it to the list as a list item
    for item in array:
        # Escape any special characters to ensure HTML safety
        escaped_item = str(item).replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')
        
        # Add the list item to the HTML string
        html_list += f"  <li>{escaped_item}</li>\n"
    
    # Close the <ul> tag
    html_list += "</ul>"
    
    return html_list

# Example usage:
my_array = ['Apple', 'Banana', 'Cherry']
html_output = array_to_html_list(my_array)
print(html_output)
```

### Explanation:
1. **Opening `<ul>` Tag**: The function starts by creating an unordered list with the opening tag `<ul>`.
2. **Iterating and Escaping Items**: It then iterates through each item in the input array. Each item is converted to a string (to handle different data types) and any special HTML characters are escaped using `replace` to ensure that the generated HTML is safe from XSS attacks.
3. **Adding List Items**: Each escaped item is added to the HTML string as an `<li>` tag.
4. **Closing Tag**: Finally, the function closes the unordered list with the closing tag `</ul>`.

### Example Output:
Given the array `['Apple', 'Banana', 'Cherry']`, the output will be:

```html
<ul>
  <li>Apple</li>
  <li>Banana</li>
  <li>Cherry</li>
</ul>
```

You can use this function to dynamically generate HTML lists from any array of data in your Python application.

