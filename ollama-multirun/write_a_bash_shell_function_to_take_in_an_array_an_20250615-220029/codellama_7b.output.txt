
You can create a Bash shell function that takes in an array as input and outputs an HTML list of its contents using the following code:
```bash
function array_to_html() {
  local -n arr=$1
  local result=""

  for i in "${arr[@]}"; do
    result+="<li>$i</li>"
  done

  echo "<ul>${result}</ul>"
}
```
This function takes an array as the first argument, and then uses a `for` loop to iterate over its elements. For each element, it creates an HTML `<li>` tag with the current element's value inside, and appends it to the `result` variable. Finally, it outputs the entire list as an HTML `<ul>` tag.

You can use this function in your Bash script by calling it like this:
```bash
array=("apple" "banana" "cherry")
html=$(array_to_html array)
echo "$html"
```
This will output the following HTML:
```
<ul>
  <li>apple</li>
  <li>banana</li>
  <li>cherry</li>
</ul>
```
Note that the `-n` option in the `local` statement is used to create a named reference to the array, so that we can use it inside the function. The `${arr[@]}` syntax is used to iterate over all elements of the array.

